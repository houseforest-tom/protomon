#include "NKeyboard.h"

/***************************************************************************************************************/
void NKeyboard::init(void){

	for(int i=0; i<256; ++i){
		m_keysDown[i] = m_prevKeysDown[i] = false;
	}
}
/***************************************************************************************************************/


/***************************************************************************************************************/
bool NKeyboard::isKeyDown(sf::Keyboard::Key key) const{

	return m_keysDown[key];
}
/***************************************************************************************************************/


/***************************************************************************************************************/
bool NKeyboard::isKeyUp(sf::Keyboard::Key key) const{

	return !m_keysDown[key];
}
/***************************************************************************************************************/


/***************************************************************************************************************/
bool NKeyboard::wasKeyPressed(sf::Keyboard::Key key) const{

	return m_keysDown[key] && !m_prevKeysDown[key];
}
/***************************************************************************************************************/


/***************************************************************************************************************/
bool NKeyboard::wasKeyReleased(sf::Keyboard::Key key) const{

	return m_prevKeysDown[key] && !m_keysDown[key];
}
/***************************************************************************************************************/


/***************************************************************************************************************/
void NKeyboard::update(void){

	int i = 0;
	for(; i<256; ++i){
		m_prevKeysDown[i] = m_keysDown[i];
	}

	for(i=0; i<256; ++i){
		m_keysDown[i] = sf::Keyboard::isKeyPressed((sf::Keyboard::Key)i);
	}
}
/***************************************************************************************************************/
