#ifndef NGINE_BASE_HDR
#define NGINE_BASE_HDR

#define NGINE_VER "0.3.0"

/***************************************************************************************************************/
#include "NPlatform.h"

//Standard Libraries
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <stdio.h>
using namespace std;
/***************************************************************************************************************/


/***************************************************************************************************************/
//Commonly used types
///8 Bits of unsigned Integer Epicness
using ubyte = uint8_t;

///16 Bits of unsigned Integer Epicness
using ushort = uint16_t;

///32 Bits of unsigned Integer Epicness
using uint = uint32_t;

///64 Bits of unsigned Integer Epicness
///This Dude represents one BIG Fucker of Number
using ularge = uint64_t;

///Size templated Character Array
template<int N> using NTextBuffer = char[N];
/***************************************************************************************************************/


/***************************************************************************************************************/
///Immediately exit from the Program and print a Message to std::cerr
void crash(const char errorMsg[]);
/***************************************************************************************************************/


/***************************************************************************************************************/
///Safely delete a Pointer and set it to null
#define del(PTR) if( (PTR) ){ delete( (PTR) ); (PTR) = nullptr; }
/***************************************************************************************************************/


/***************************************************************************************************************/
///PI as Double (Ya know, precise n shit!)
#define PI (double)(3.14159265358979323846264338327950288419716939937510582097494459230781640628620)
/***************************************************************************************************************/


/***************************************************************************************************************/
///Returns X²
#define SQR(X) ( (X) * (X) )
/***************************************************************************************************************/


/***************************************************************************************************************/
///Returns the absolute Value of X
#define ABS(X) (    ( (X) >= 0 )    ?    (X) : -(X)    )
/***************************************************************************************************************/

#endif // NGINE_BASE_HDR
